name: Publish Website to CPanel
on: 
  push:
    branches:
      - master
jobs:
  job_id:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
    - id: Checkout
      uses: actions/checkout@v3

    - id: Auth
      uses: 'google-github-actions/auth@v0'
      with:
        workload_identity_provider: 'projects/grupohost-358101/locations/global/workloadIdentityPools/my-pool/providers/my-provider'
        # service_account: 'anabel@host.com.do'
        service_account: 'grouphost-356@grouphost-358101.iam.gserviceaccount.com'

    - id: Deploy
      uses: google-github-actions/deploy-cloudrun@v0
      with:
        service: '115418536415602664257'
        region: 'us-central1-a'
        # NOTE: If required, update to the appropriate source folder
        source: ./
    # - id: 'deploy'
    #   uses: 'google-github-actions/deploy-cloudrun@v0'
    #   with:
    #     service: '115418536415602664257'
    #     image: 'gcr.io/cloudrun/centos-7-v20220719'
    #     project_id: 'grupohost-358101'

    # - name: 'Use output'
    #   run: 'curl "${{ steps.deploy.outputs.url }}"'
    # - id: 'upload-folder'
    #   uses: 'google-github-actions/upload-cloud-storage@v0'
    #   with:
    #     path: '/'
    #     destination: 'grupo-bucket'

  # web-deploy:
  #   name: ðŸŽ‰ Deploy
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: ðŸšš Get latest code
  #     uses: actions/checkout@v2

  #   - name: ðŸ“‚ Sync files
  #     uses: SamKirkland/FTP-Deploy-Action@4.3.0
  #     with:
  #       server: ${{ secrets.FTP_SERVER }}
  #       username: ${{ secrets.FTP_USER }}
  #       password: ${{ secrets.FTP_PASS }}
  #       port: 21
  #       protocol: ftp
  #       server-dir: /
  # run-commands:
  #   needs: web-deploy
  #   name: Run SSH command appleboy
  #   runs-on: grupohost
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: executing remote ssh commands using ssh
  #       run: cd ../../../../public_html && composer install --no-dev && yarn install
  # generate-translations:
  #   needs: run-commands
  #   name: Generate Translations
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Generating Translations
  #     uses: wei/wget@v1
  #     with:
  #       args: -qO- https://beta.grupo.host/api/generateTranslations

    # name: Run SSH command 
    # runs-on: ubuntu-latest
    # steps:
    # - name: executing remote ssh commands using ssh
    #   uses: garygrossgarten/github-action-ssh@release
    #   with:
    #     command: whoami
    #     host: 'beta.grupo.host'
    #     username: 'betagrupo'
    #     password: 'eLvjns6lN'
    #     port: '22'

    # name: Run SSH command appleboy
    # runs-on: ubuntu-latest
    # steps:
    # - name: executing remote ssh commands using ssh
    #   uses: appleboy/ssh-action@master
    #   with:
    #     host: 'beta.grupo.host'
    #     username: 'betagrupo'
    #     password: 'eLvjns6lN'
    #     port: 22
    #     script: whoami
        # script: composer install --no-dev

    # - name: ðŸšš Get latest code
    #   uses: actions/checkout@v2
    # - name: Running SSH command  
    #   # You may pin to the exact commit or the version.
    #   # uses: garygrossgarten/github-action-ssh@d2ce399984eed21f8cf2a26d28ba309e1ed52fc5
    #   uses: garygrossgarten/github-action-ssh@v0.6.3
    #   with:
    #     # Command to execute on the remote server.
    #     command: composer install --no-dev
    #     # Hostname or IP address of the server.
    #     host: ${{ secrets.FTP_SERVER }}
    #     # Username for authentication.
    #     username: ${{ secrets.FTP_USER }}
    #     # Port number of the server.
    #     port: 22
    #     # File Location or string that contains a private key for either key-based or hostbased user authentication (OpenSSH format)
    #     privateKey: ${{ secrets.CPANEL_PRIVATE_KEY }}
    #     # Password for password-based user authentication.
    #     password: ${{ secrets.FTP_PASS }}
    #     # For an encrypted private key, this is the passphrase used to decrypt it.
    #     # passphrase: # optional
    #     # # Try keyboard-interactive user authentication if primary user authentication method fails.
    #     # tryKeyboard: # optional
