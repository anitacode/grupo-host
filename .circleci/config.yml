# .circleci/config.yml
version: 2
jobs:
  yarn_install:
    docker:
      - image: cimg/node:16.13.2
    steps:
      - checkout
      - restore_cache:
          name: Restore node_modules from cache
          key: node_modules-v1-{{ checksum "yarn.lock" }}
      - run: yarn install --check-files
      - save_cache:
          name: Cache node_modules
          key: node_modules-v1-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
  eslint:
    docker:
      - image: cimg/node:16.13.2
    steps:
      - checkout
      - restore_cache:
          name: Restore node_modules from cache
          key: node_modules-v1-{{ checksum "yarn.lock" }}
      - run:
          name: Run Eslint
          command: npm run lint:js     
  stylelint:
    docker:
      - image: cimg/node:16.13.2
    steps:
      - checkout
      - restore_cache:
          name: Restore node_modules from cache
          key: node_modules-v1-{{ checksum "yarn.lock" }}
      - run:
          name: Run Stylelint
          command: npm run lint:style
  jest:
    resource_class: large
    docker:
      - image: cimg/node:16.13.2
    steps:
      - checkout
      - restore_cache:
          name: Restore node_modules from cache
          key: node_modules-v1-{{ checksum "yarn.lock" }}
      - run:
          name: Run Jest (if needed)
          command: npm test
  prod_deploy:
    docker:
      - image:  circleci/node:8-browsers
    working_directory: ~/repo
    steps:
      - checkout
      - run: 
          name: Deploy Master Branch
          command: |
            sudo apt-get update
            sudo apt-get -qq install git-ftp
            echo "Deploying project ..."
            echo $(git status)
            git ftp push --user "${FTP_USER}" --passwd "${FTP_PASSWORD}" ${FTP_HOST}
      #       steps:
      # - checkout
      # - run:
      #     name: Deploy to host if branch is master
      #     command: |
      #       if [[ "${CIRCLE_BRANCH}" == "master" ]] 
      #       then
      #         apt-get update
      #         apt-get -qq install git-ftp
      #         echo "'_$(git status -uno --porcelain | wc -l)_'"

      #         git status -uno --porcelain
      #         echo "Initiating Push site:labs.kosmik.id."
      #         git ftp init --user "${FTP_USER}" --passwd "${FTP_PASSWORD}" ${FTP_HOST}
      #       else
      #         echo "Not master branch so not deploying"
      #       fi
workflows:
  version: 2
  run_tests:
    jobs:
      - yarn_install
      - eslint:
          requires:
            - yarn_install
      - stylelint:
          requires:
            - yarn_install
      - jest:
          requires:
            - yarn_install
      - prod_deploy:
          filters:
            branches:
              only: /master/
            # tags:
              # only: /^v([0-9]+\.){2}[0-9]+$/
  # build:
    # docker:
      # - image: circleci/node:10
    # steps:
      # - checkout
      # - eslint:
        # - run: ./node_modules/.bin/eslint --fix front-end
      # Download and cache dependencies.
      # - restore_cache:
          # keys:
          # - v1-dependencies-{{ checksum "package.json" }}
          # Fallback to using the latest cache if no exact match is found.
          # - v1-dependencies-
      # - run: npm install
      # - save_cache:
          # paths:
            # - node_modules
          # key: v1-dependencies-{{ checksum "package.json" }}
      # Build the application.
      # - run: npm run generate
      # Run the FTP deployment script.
      # - run: npm run ftp-deploy