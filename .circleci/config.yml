# .circleci/config.yml
version: 2
jobs:
  yarn_install:
    docker:
      - image: cimg/node:16.13.2
    steps:
      - checkout
      - restore_cache:
          name: Restore node_modules from cache
          key: node_modules-v1-{{ checksum "yarn.lock" }}
      - run: yarn install --check-files
      - save_cache:
          name: Cache node_modules
          key: node_modules-v1-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
  eslint:
    docker:
      - image: cimg/node:16.13.2
    steps:
      - checkout
      - restore_cache:
          name: Restore node_modules from cache
          key: node_modules-v1-{{ checksum "yarn.lock" }}
      - run:
          name: Run Eslint
          command: npm run lint:js     
  stylelint:
    docker:
      - image: cimg/node:16.13.2
    steps:
      - checkout
      - restore_cache:
          name: Restore node_modules from cache
          key: node_modules-v1-{{ checksum "yarn.lock" }}
      - run:
          name: Run Stylelint
          command: npm run lint:style
  jest:
    resource_class: large
    docker:
      - image: cimg/node:16.13.2
    steps:
      - checkout
      - restore_cache:
          name: Restore node_modules from cache
          key: node_modules-v1-{{ checksum "yarn.lock" }}
      - run:
          name: Run Jest (if needed)
          command: npm test
  prod_deploy:
    docker:
      - image:  cimg/node:16-browsers
    working_directory: ~/repo
    steps:
      - checkout
      - run: 
          name: Deploy Master Branch
          command: |
            sudo apt-get update
            sudo apt-get -qq install git-ftp
            echo "Deploying project ..."
            echo $(git status)
            git ftp push --user "${FTP_USER}" --passwd "${FTP_PASSWORD}" ${FTP_HOST}

workflows:
  version: 2
  run_tests:
    jobs:
      - yarn_install
      - eslint:
          requires:
            - yarn_install
      - stylelint:
          requires:
            - yarn_install
      - jest:
          requires:
            - yarn_install
      - prod_deploy:
          filters:
            branches:
              only: /master/